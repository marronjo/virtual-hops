import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import './App.css'; // Custom CSS for styling
import useMetamask from './useMetamask'; // Import the custom hook

function App() {
  const [selectedChain, setSelectedChain] = useState('AVAX');
  const [amount, setAmount] = useState('');
  
  // Use the custom hook to handle Metamask connection and network information
  const {
    web3,
    metamaskConnected,
    walletAddress,
    networkInfo,
    connectMetamask,
  } = useMetamask();

  const handleChainChange = (e) => {
    setSelectedChain(e.target.value);
  };

  const handleAmountChange = (e) => {
    setAmount(e.target.value);
  };

  const handleSubmit = () => {
    // ... (same as before)
  };

  return (
    <div className="container mt-5">
      <div className="info-container">
        <h2 className="info-title">Metamask Connection Information</h2>
        <div className="info-content">
          <p className="connection-status">
            Status: {metamaskConnected ? 'Connected' : 'Not Connected'}
            {!metamaskConnected && (
              <button className="btn btn-primary" onClick={connectMetamask}>
                Connect Metamask
              </button>
            )}
          </p>
          {networkInfo && (
            <>
              <p>
                Network: {networkInfo.networkName} - Chain ID: {networkInfo.chainID}
              </p>
              <p>Wallet Address: {walletAddress}</p>
            </>
          )}
        </div>
      </div>
      <h1 className="app-title">Chainlink CCIP Transaction</h1>
      <div className="form-container">
        <div className="form-group">
          <label htmlFor="chainSelect" className="form-label">
            Choose Destination Chain:
          </label>
          <select
            id="chainSelect"
            className="form-control"
            onChange={handleChainChange}
            value={selectedChain}
          >
            <option value="AVAX">Avalanche (Fuji testnet)</option>
            {/* Add other options based on your requirements */}
          </select>
        </div>
        <div className="form-group">
          <label htmlFor="amountInput" className="form-label">
            Enter Amount:
          </label>
          <input
            type="number"
            id="amountInput"
            className="form-control"
            value={amount}
            onChange={handleAmountChange}
            placeholder="Enter amount"
          />
        </div>
        <button className="btn btn-primary" onClick={handleSubmit}>
          Send
        </button>
      </div>
    </div>
  );
}

export default App;
